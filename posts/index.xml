<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Sam Harrison</title><link>https://samharrison7.github.io/samharrison-hugo/posts/</link><description>Recent content in Posts on Sam Harrison</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Thu, 23 Dec 2021 12:18:46 +0000</lastBuildDate><atom:link href="https://samharrison7.github.io/samharrison-hugo/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Some Content</title><link>https://samharrison7.github.io/samharrison-hugo/posts/some-content/</link><pubDate>Thu, 23 Dec 2021 12:18:46 +0000</pubDate><guid>https://samharrison7.github.io/samharrison-hugo/posts/some-content/</guid><description>This is a post!
import pandas as pd df = pd.read_csv(&amp;#39;/path/to/file.csv&amp;#39;) print(df) print(&amp;#34;Some text&amp;#34;) def times_two(stuff): return stuff * 2 program main implicit none character(len=256) :: my_char = &amp;#34;This is a character string&amp;#34; print *, my_char function times_two(stuff) result(rslt) real(dp), intent(in) :: stuff real(dp), intent(out) :: rslt rslt = stuff * 2 end function end program &amp;lt;div class=&amp;#34;my-class&amp;#34;&amp;gt; &amp;lt;span id=&amp;#34;spanny&amp;#34;&amp;gt;Stuff&amp;lt;/span&amp;gt; &amp;lt;/div&amp;gt;</description></item><item><title>My notebook title</title><link>https://samharrison7.github.io/samharrison-hugo/posts/test-nb/</link><pubDate>Thu, 01 Jun 2017 00:00:00 +0000</pubDate><guid>https://samharrison7.github.io/samharrison-hugo/posts/test-nb/</guid><description>import numpy as np arr = np.array([0,1,2,3,4]) arr array([0, 1, 2, 3, 4]) Here is an equation:
\[ E = mc^2 \]
where \(E\) is energy&amp;hellip;
import matplotlib.pyplot as plt plt.plot(arr) plt.show() import plotly.express as px fig = px.scatter(arr) fig.show() Hello!
import pandas as pd df = pd.DataFrame({&amp;#39;col1&amp;#39;: [4,3,2], &amp;#39;col2&amp;#39;: [40,30,20]}) df .dataframe tbody tr th:only-of-type { vertical-align: middle; } .dataframe tbody tr th { vertical-align: top; } .</description></item></channel></rss>